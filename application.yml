feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  tracing:
    sampling:
      probability: 1.0

resilience4j:
  circuitbreaker:
    instances:
      carServiceCB:
        register-health-indicator: true
        slidingWindowSize: 5
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
      rentalCompanyServiceCB:
        register-health-indicator: true
        slidingWindowSize: 5
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
      bookingServiceCB:
        register-health-indicator: true
        slidingWindowSize: 5
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10s

spring:
  datasource:
    url: jdbc:postgresql://yamanote.proxy.rlwy.net:48248/railway
    username: postgres
    password: EbWmhfvRojvWIULVkTcKTvvcseZxYecN
    driver-class-name: org.postgresql.Driver

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true

  zipkin:
    base-url: http://localhost:9411
    enabled: true
    service:
      name: ${spring.application.name}

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30
    prefer-ip-address: true
    metadata-map:
      instanceId: "${spring.application.name}:${spring.application.instance_id:${random.value}}"

logging:
  level:
    com.netflix.discovery: WARN
    org.springframework.cloud.netflix.eureka: WARN
    org.springframework.web: INFO
  pattern:
    level: "%5p [${spring.application.name},%X{traceId:-},%X{spanId:-}]"
